name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Build release binary
        run: |
          swift build -c release --product BatteryMonitor
          swift build -c release --product BatteryMonitorCLI

      - name: Get version from tag
        id: get_version
        run: |
          if [[ "${GITHUB_REF}" =~ ^refs/tags/v(.*)$ ]]; then
            echo "version=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=dev" >> $GITHUB_OUTPUT
            echo "tag=dev" >> $GITHUB_OUTPUT
          fi

      - name: Create .app bundle
        run: |
          # Create bundle structure
          mkdir -p BatteryMonitor.app/Contents/MacOS
          mkdir -p BatteryMonitor.app/Contents/Resources

          # Copy binary
          cp .build/arm64-apple-macosx/release/BatteryMonitor \
             BatteryMonitor.app/Contents/MacOS/BatteryMonitor

          # Create Info.plist
          cat > BatteryMonitor.app/Contents/Info.plist << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
          	<key>CFBundleDevelopmentRegion</key>
          	<string>en</string>
          	<key>CFBundleExecutable</key>
          	<string>BatteryMonitor</string>
          	<key>CFBundleIdentifier</key>
          	<string>com.batterymonitor.app</string>
          	<key>CFBundleInfoDictionaryVersion</key>
          	<string>6.0</string>
          	<key>CFBundleName</key>
          	<string>Battery Monitor</string>
          	<key>CFBundlePackageType</key>
          	<string>APPL</string>
          	<key>CFBundleShortVersionString</key>
          	<string>${{ steps.get_version.outputs.version }}</string>
          	<key>CFBundleVersion</key>
          	<string>${{ github.run_number }}</string>
          	<key>LSMinimumSystemVersion</key>
          	<string>13.0</string>
          	<key>LSUIElement</key>
          	<true/>
          	<key>NSHighResolutionCapable</key>
          	<true/>
          	<key>NSHumanReadableCopyright</key>
          	<string>Copyright Â© 2025. All rights reserved.</string>
          </dict>
          </plist>
          EOF

          # Verify bundle
          ls -lh BatteryMonitor.app/Contents/MacOS/BatteryMonitor

      - name: Code sign app bundle
        run: |
          # Ad-hoc code signing (for development/testing)
          # For production, you would use a Developer ID certificate
          codesign --force --deep --sign - BatteryMonitor.app

          # Verify signature
          codesign -dvv BatteryMonitor.app

      - name: Create DMG installer
        run: |
          # Create staging directory with proper installer layout
          mkdir -p dmg_staging
          cp -R BatteryMonitor.app dmg_staging/

          # Create symlink to Applications folder for easy drag-and-drop install
          ln -s /Applications dmg_staging/Applications

          # Create temporary DMG
          hdiutil create \
            -volname "Battery Monitor Installer" \
            -srcfolder dmg_staging \
            -ov \
            -format UDRW \
            temp.dmg

          # Mount the temporary DMG
          MOUNT_DIR=$(hdiutil attach -readwrite -noverify -noautoopen temp.dmg | \
                      awk '/^\/dev/ {print $3}')

          # Set custom icon positions and window settings (optional, for better UX)
          # This requires osascript, which works on macOS runners
          echo '
          tell application "Finder"
            tell disk "Battery Monitor Installer"
              open
              set current view of container window to icon view
              set toolbar visible of container window to false
              set statusbar visible of container window to false
              set bounds of container window to {400, 100, 900, 450}
              set viewOptions to the icon view options of container window
              set arrangement of viewOptions to not arranged
              set icon size of viewOptions to 100
              set position of item "Battery Monitor.app" of container window to {125, 150}
              set position of item "Applications" of container window to {375, 150}
              close
              open
              update without registering applications
              delay 2
            end tell
          end tell
          ' | osascript || true

          # Sync and unmount
          sync
          hdiutil detach "$MOUNT_DIR" || true

          # Convert to compressed read-only DMG
          hdiutil convert temp.dmg \
            -format UDZO \
            -imagekey zlib-level=9 \
            -o BatteryMonitor.dmg

          # Clean up temporary DMG
          rm -f temp.dmg

          # Get DMG size and verify
          ls -lh BatteryMonitor.dmg
          echo "âœ“ DMG installer created with Applications symlink"

      - name: Package CLI binary
        run: |
          # Package CLI tool separately
          cp .build/arm64-apple-macosx/release/BatteryMonitorCLI .
          tar -czf BatteryMonitorCLI.tar.gz BatteryMonitorCLI
          shasum -a 256 BatteryMonitorCLI.tar.gz > BatteryMonitorCLI.tar.gz.sha256

      - name: Create checksums
        run: |
          shasum -a 256 BatteryMonitor.dmg > BatteryMonitor.dmg.sha256
          cat BatteryMonitor.dmg.sha256
          cat BatteryMonitorCLI.tar.gz.sha256

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.get_version.outputs.tag }} \
            --title "Battery Monitor ${{ steps.get_version.outputs.version }}" \
            --notes "## Battery Monitor v${{ steps.get_version.outputs.version }}

          ### macOS Menu Bar Battery Monitoring Tool

          **Requirements:**
          - macOS 13.0 (Ventura) or later
          - Apple Silicon (M1/M2/M3/M4) Mac

          ### Installation
          1. Download \`BatteryMonitor.dmg\`
          2. Open the DMG file
          3. Drag \`Battery Monitor.app\` to your Applications folder
          4. Launch from Applications or Spotlight

          ### Features
          - ðŸ”‹ Real-time battery percentage in menu bar
          - âš¡ Charging indicators
          - ðŸ“Š Detailed battery health metrics
          - ðŸ”Œ USB-C Power Delivery diagnostics
          - ðŸŽ¨ Dark mode support
          - ðŸ”„ Auto-refresh every 30 seconds

          ### What's Included
          - \`BatteryMonitor.dmg\` - Installer package (${{ steps.get_version.outputs.version }})
          - \`BatteryMonitor.dmg.sha256\` - Checksum for verification
          - \`BatteryMonitorCLI.tar.gz\` - Command-line tool
          - \`BatteryMonitorCLI.tar.gz.sha256\` - CLI checksum

          For detailed installation instructions, see [INSTALL.md](https://github.com/${{ github.repository }}/blob/${{ steps.get_version.outputs.tag }}/INSTALL.md)

          ---
          ðŸ¤– Built with Swift and SwiftUI" \
            BatteryMonitor.dmg \
            BatteryMonitor.dmg.sha256 \
            BatteryMonitorCLI.tar.gz \
            BatteryMonitorCLI.tar.gz.sha256
